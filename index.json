[{"categories":null,"contents":"基本概念 有些時候使用者在網站上操作時，我們可能會需要儲存一些資料，這類資料不需要寫入資料庫，這時就可以進入本次文章的主題: LocalStorage 及 SessionStorage。\n這兩個地方等於是我們將上述資料儲存在用戶端，而非寫入資料庫。使用場景可能會在紀錄當前使用者的購物車行為、列表頁的篩選項目等項目，比較屬於是操作後產生的行為數據，就能儲存在用戶端上，並且根據其特性或需求來操作這些數據。\nSessionStorage 以下為 SessionStorage 的特性:\n 儲存的資料只能在當前頁面使用 關閉或切換該頁面(Browser Sessions)，則該資料會自動刪除  所以符合上述特性的資料都能儲存在 SessionStorage，那我們來看看資料要如何儲存在 SessionStorage 吧。\n// 將資料存到sessionStorage sessionStorage.setItem(\u0026#34;key\u0026#34;, \u0026#34;value\u0026#34;);  // 從sessionStorage取得之前存的資料 var data = sessionStorage.getItem(\u0026#34;key\u0026#34;);  // 從sessionStorage移除之前存的資料 sessionStorage.removeItem(\u0026#34;key\u0026#34;);  // 從sessionStorage移除之前存的所有資料 sessionStorage.clear(); key為任意字串，可自行定義，value的部分則只能是string，所以如果要儲存物件或陣列的話可以使用 JSON。\nLocalStorage 以下為 LocalStorage 的特性:\n 儲存的資料可以在當前網站所有頁面使用 關閉或切換該頁面(Browser Sessions)，則該資料依舊存在，除非手動去刪除  與 SessionStorage 最大的差異在於資料會永久儲存及跨頁面(Browser Sessions)使用，所以有上述需求的就必須要使用 LocalStorage。\n// 將資料存到localStorage localStorage.setItem(\u0026#34;key\u0026#34;, value);  // 從localStorage取得之前存的資料 var data = localStorage.getItem(\u0026#34;key\u0026#34;);  // 從localStorage移除之前存的資料 localStorage.removeItem(\u0026#34;key\u0026#34;);  // 從localStorage移除之前存的所有資料 localStorage.","date":"2022-05-22T00:00:00Z","permalink":"https://eddieliu58.github.io/hugo-website/blog/localstorage%E5%8F%8Asessionstorage/","tags":["LocalStorage","SessionStorage"],"title":"LocalStorage及SessionStorage"},{"categories":null,"contents":"此篇將紀錄 vue3 LifeCycle 一個比較大的改動，也就是 Composition API。 由於工作上還是使用 vue2，因此本篇會順便介紹 vue2 與 vue3 這部分的差異性。\nvue2 LifeCycle vue2 總共有 8 個 hook,網上有非常多講解 LifeCycle 的文章,這裡就不再貼測試每個 hook 的程式碼，直接快速帶過。 正常情況下會經歷四個 hook(beforeCreate、created、beforeMount 及 mounted),分別是以下的狀況:\n beforeCreate：el 和 data 並未初始化,還是 undefind 的狀態 created:此時完成了 data 的初始化，el 還沒有建立 beforeMount：完成了 el 和 data 的初始化 mounted:el 掛載完成  若 data 有被更新,則會觸發 beforeUpdate 與 updated。 最後 beforeDestroy 及 destroyed 作者比較少用，但若有 el 需要此功能，可使用destroy(),此 el 被銷毀後這時 el 中的任何定義( data 、 methods\u0026hellip;等)都已被解除綁定，代表在此做的任何操作都會失效，而整個 LifeCycle 最後能對 el 做事情的 hook 就是 beforeDestroy。","date":"2022-04-11T00:00:00Z","permalink":"https://eddieliu58.github.io/hugo-website/blog/vue-composition-api/","tags":["vue","Composition API"],"title":"Composition API: setup()"},{"categories":null,"contents":"本篇文章文章將依序研究 vue3 從環境一路到 component 實際應用\nComposition API Vue component Props \u0026amp; emit ","date":"2022-03-06T00:00:00Z","permalink":"https://eddieliu58.github.io/hugo-website/blog/vue3%E5%85%A5%E9%96%80/","tags":["vue"],"title":"Vue3 入門"},{"categories":null,"contents":"基隆人，大三時由於接觸到攝影並愛上攝影，且當時剛好物聯網開始熱烈討論，並決定到花蓮東華一邊攻讀電機碩士一邊玩攝影。碩士論文需要實做物聯網系統，因此也接觸到網頁，在當時就產生了興趣，後續並決定以此興趣透入職場，剛好攝影也培養自己的美感，與前端工程師所需的美感剛好有加分作用。\n經歷簡述 前端工程師 (2019/04 ~ 在職) 畢業後第一份工作，在當前端工程師。第一年主要工作內容是負責網站前端功能開發，包括CSS切版、jQuery使用，並慢慢學習Drupal 8 twig template 以及後端。 第一年也經歷了基礎的前端開發，並要求自己開發樣式與設計圖不能有過多差異，同時學習與設計跟PM溝通，理解客戶需求並解決問題。 第二年公司接到TSMC要轉用CMS系統開發官網，因此與TSMC IT部門每周固定開會，最終完成了TSMC三個網站的重製，也如期上線到現在持續協助維護中。 目前帶過兩個小專案及一個中型專案，也了解專案流程中要如何分配任務給團隊並動態調整，盡可能讓專案如期上線。","date":"2022-03-06T00:00:00Z","permalink":"https://eddieliu58.github.io/hugo-website/page/about/","tags":null,"title":"關於我"}]