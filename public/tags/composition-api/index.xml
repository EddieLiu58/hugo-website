<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Composition API on Eddie Blog</title>
    <link>https://eddieliu58.github.io/hugo-website/tags/composition-api/</link>
    <description>Recent content in Composition API on Eddie Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 11 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://eddieliu58.github.io/hugo-website/tags/composition-api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Composition API: setup()</title>
      <link>https://eddieliu58.github.io/hugo-website/blog/vue-composition-api/</link>
      <pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://eddieliu58.github.io/hugo-website/blog/vue-composition-api/</guid>
      <description>此篇將紀錄 vue3 LifeCycle 一個比較大的改動，也就是 Composition API。 由於工作上還是使用 vue2，因此本篇會順便介紹 vue2 與 vue3 這部分的差異性。
vue2 LifeCycle vue2 總共有 8 個 hook,網上有非常多講解 LifeCycle 的文章,這裡就不再貼測試每個 hook 的程式碼，直接快速帶過。 正常情況下會經歷四個 hook(beforeCreate、created、beforeMount 及 mounted),分別是以下的狀況:
 beforeCreate：el 和 data 並未初始化,還是 undefind 的狀態 created:此時完成了 data 的初始化，el 還沒有建立 beforeMount：完成了 el 和 data 的初始化 mounted:el 掛載完成  若 data 有被更新,則會觸發 beforeUpdate 與 updated。 最後 beforeDestroy 及 destroyed 作者比較少用，但若有 el 需要此功能，可使用destroy(),此 el 被銷毀後這時 el 中的任何定義( data 、 methods&amp;hellip;等)都已被解除綁定，代表在此做的任何操作都會失效，而整個 LifeCycle 最後能對 el 做事情的 hook 就是 beforeDestroy。</description>
    </item>
    
  </channel>
</rss>
